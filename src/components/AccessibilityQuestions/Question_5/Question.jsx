import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Rest и Spread - это два оператора, которые используются в JavaScript для
				работы с массивами и объектами. Они выполняют разные функции, и вот их
				основные различия:
			</p>
			<p>
				<ol>
					<li>
						<b>Spread оператор (...):</b>
						<p>
							<ul>
								<li>
									<b>Распространение (Spread)</b> оператор используется для
									разбиения (распаковки) элементов массива или свойств объекта и
									вставки их в другой массив или объект. Это позволяет создавать
									копии массивов и объектов или объединять их.
								</li>
							</ul>
						</p>
						<p>
							Пример использования Spread оператора с массивами:
							<Examples>
								const arr1 = [1, 2, 3];
								<br />
								const arr2 = [4, 5, ...arr1, 6]; // Создаётся новый массив [4,
								5, 1, 2, 3, 6]
							</Examples>
						</p>
						<p>
							Пример использования Spread оператора с объектами:
							<Examples>
								const obj1 = &#123; a: 1, b: 2 &#125;;
								<br /> const obj2 = &#123; c: 3, ...obj1, d: 4 &#125;; //
								Создаётся новый объект &#123; c: 3, a: 1, b: 2, d: 4 &#125;
							</Examples>
						</p>
					</li>
					<li>
						<b>Rest оператор (...):</b>
						<p>
							<ul>
								<li>
									<b>Оставшаяся часть (Rest) </b>оператор используется для сбора
									оставшихся аргументов функции в виде массива. Он позволяет
									функции принимать произвольное количество аргументов, и все
									они будут доступны в виде массива через Rest параметр.
								</li>
							</ul>
						</p>
						<p>
							Пример использования Rest оператора в функции:
							<Examples>
								function sum(...numbers) &#123;
								<br />
								&emsp;&emsp;return numbers.reduce((total, number) =&gt; total +
								number, 0);
								<br />
								&#125;
								<br />
								<br />
								console.log(sum(1, 2, 3, 4)); // Вывод: 10
							</Examples>
						</p>
						<p>
							Здесь <b>...numbers</b> собирает оставшиеся аргументы функции в
							массив <b>numbers</b>.
						</p>
					</li>
				</ol>
			</p>
			<p>
				Важно помнить, что `...` используется как оператор распространения
				(Spread) или сбора (Rest) в зависимости от контекста. В массивах и
				объектах он выполняет распространение, а в параметрах функций - сбор.
			</p>
		</div>
	)
}

export default Question
