import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Feature detection, feature inference и анализ строки user-agent - это
				различные подходы к определению поддерживаемых функций (фич) и
				возможностей браузера веб-страницы.
			</p>
			<p>
				<ol>
					<li>
						<b>Feature Detection (Обнаружение возможностей):</b> <br />
						Feature detection - это метод проверки поддерживаемых функций
						непосредственно во время выполнения кода JavaScript. Этот метод
						основан на проверке наличия определенных функций, методов или
						свойств объектов, которые могут быть уникальны для браузеров или их
						версий. Вместо предположений о поддержке функций проверяются
						конкретные возможности перед их использованием. <br />
						Пример feature detection в JavaScript:
						<Examples>
							if (window.localStorage) &#123;
							<br />
							&emsp;&emsp;// Браузер поддерживает localStorage
							<br />
							&emsp;&emsp;// Выполнить соответствующие действия
							<br />
							&#125; else &#123;
							<br />
							&emsp;&emsp;// Обработка, если localStorage не поддерживается
							<br />
							&#125;
						</Examples>
					</li>
					<li>
						<b>Feature Inference (Вывод функций):</b> <br />
						Feature inference - это метод, при котором предполагается поддержка
						функций на основе того, что другие, связанные с ними функции, уже
						доступны. Он опирается на предположение о том, что, если какая-то
						функция поддерживается, то и связанные с ней функции тоже должны
						быть поддержаны. <br />
						Пример: <br />
						Если браузер поддерживает <b>addEventListener</b>, то можно
						предположить, что он также поддерживает <b>removeEventListener</b>.
					</li>
					<li>
						<b>Анализ строки User-Agent:</b> <br />
						Это метод, при котором анализируется строка User-Agent, которая
						отправляется серверу веб-сайта каждым браузером. Она содержит
						информацию о браузере, его версии, операционной системе и других
						характеристиках клиентского устройства. Однако этот метод менее
						надежен, поскольку пользователи могут изменять или модифицировать
						эту строку для различных целей.
					</li>
				</ol>
			</p>
			<p>
				Как правило, предпочтительнее использовать feature detection, так как
				это более надежный способ определения возможностей браузера. Он
				позволяет вашему коду адаптироваться к реальным функциям, которые
				поддерживаются браузером, и предоставляет возможность обеспечения
				совместимости с различными браузерами и их версиями.
			</p>
		</div>
	)
}

export default Question
