import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				Распространение события (Event Propagation) в JavaScript описывает
				процесс передачи события от источника (например, пользовательского
				действия) через различные элементы DOM в цепочке их вложенности или
				иерархии.
			</p>
			<p>
				В DOM событие может проходить через несколько стадий, и это может
				происходить в двух направлениях:
			</p>
			<p>
				<ol>
					<li>
						<b>Всплытие (Bubbling): </b>Событие начинает свой путь от самого
						глубоко вложенного элемента, где оно произошло, и всплывает вверх по
						иерархии DOM, передаваясь через родительские элементы, пока не
						достигнет самого верхнего родителя (обычно это <b>document</b>). Это
						стандартное поведение для большинства событий в DOM, и по умолчанию
						многие события используют этот механизм.
					</li>
					<li>
						<b>Погружение (Capturing): </b>Событие начинает свой путь с самого
						верхнего родительского элемента и опускается вниз по иерархии DOM,
						передаваясь через вложенные элементы, пока не достигнет целевого
						элемента (где оно произошло). Погружение редко используется в
						реальном коде и обычно устанавливается явно с помощью метода{' '}
						<b>addEventListener</b> с третьим параметром <b>true</b>.
					</li>
				</ol>
			</p>
			<p>
				Когда событие происходит на элементе, оно может обрабатываться на этом
				элементе самом, а также на его родительских элементах в процессе
				всплытия или погружения.
			</p>
			<p>
				Метод <b>addEventListener</b> позволяет управлять этим поведением с
				помощью параметра <b>useCapture</b>, который определяет, используется ли
				погружение (<b>true</b>) или всплытие (<b>false</b>, по умолчанию).
			</p>
			<p>
				Процесс распространения событий полезен, поскольку он позволяет
				обрабатывать события на более общих или общедоступных элементах в
				иерархии DOM, вместо привязки обработчиков ко всем отдельным элементам,
				что делает код более модульным и управляемым.
			</p>
		</div>
	)
}

export default Question
