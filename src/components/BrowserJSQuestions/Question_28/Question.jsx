/* eslint-disable react/jsx-no-comment-textnodes */
import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Метод <b>scrollIntoView()</b> используется для прокрутки содержимого
				веб-страницы таким образом, чтобы указанный элемент стал видимым в окне
				браузера. Он прокручивает содержимое окна или контейнера таким образом,
				чтобы элемент стал видимым, если он находится за пределами видимой
				области.
			</p>
			<p>
				Этот метод имеет один необязательный параметр{' '}
				<b>scrollIntoViewOptions</b>, который является объектом с настройками
				прокрутки. Этот объект может содержать опции для управления поведением
				прокрутки, такие как <b>behavior, block, inline,</b> и другие, в
				зависимости от браузера.
			</p>
			<p>
				Пример использования <b>scrollIntoView()</b>:
			</p>
			<Examples>
				// Находим элемент на странице
				<br />
				let element = document.getElementById('myElement');
				<br />
				<br />
				// Прокручиваем страницу так, чтобы элемент стал видимым
				<br />
				element.scrollIntoView();
				<br />
				<br />
				// Пример с настройками прокрутки
				<br />
				element.scrollIntoView(&#123;
				<br />
				&emsp;&emsp;behavior: 'smooth', // Плавная прокрутка (поддерживается не
				всеми браузерами)
				<br />
				&emsp;&emsp;block: 'start', // Выравнивание элемента по верхней границе
				видимой области
				<br />
				&emsp;&emsp;inline: 'nearest' // Прокрутка элемента так, чтобы он был
				виден ближе всего к границе видимой области
				<br />
				&#125;);
			</Examples>
			<p>
				Когда <b>scrollIntoView()</b> вызывается без параметров или с пустым
				объектом настроек, элемент прокручивается так, чтобы его верхняя часть
				была выровнена с верхней границей видимой области окна браузера. Это
				делает элемент видимым в окне браузера, даже если он находится внизу
				страницы, за пределами видимой области.
			</p>
			<p>
				Этот метод часто используется при навигации по длинным веб-страницам или
				при создании интерфейсов, где требуется автоматическая прокрутка к
				определенному элементу при действиях пользователя.
			</p>
		</div>
	)
}

export default Question
