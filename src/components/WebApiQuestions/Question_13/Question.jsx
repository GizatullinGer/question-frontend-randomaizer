import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				JSONP (JSON with Padding) представляет собой метод запроса данных между
				доменами (cross-domain requests) веб-страницы с использованием тега
				&lt;script&gt;. Основная цель JSONP заключается в обходе политики
				безопасности Same-Origin Policy браузера, которая обычно запрещает
				запросы на другой домен из JavaScript из соображений безопасности.
			</p>
			<p>Принцип работы JSONP:</p>
			<p>
				<ol>
					<li>
						<b>Создание функции обратного вызова (callback function): </b>
						Веб-страница, находящаяся на одном домене, создает функцию обратного
						вызова (callback function), которая будет обрабатывать данные,
						полученные из другого домена.
					</li>
					<li>
						<p>
							<b>Формирование запроса с использованием тега &lt;script&gt;: </b>
							При формировании запроса на данные из другого домена, веб-страница
							добавляет тег &lt;script&gt; с исходным URL-адресом запроса,
							который включает ссылку на сервер, содержащий данные, и имя
							функции обратного вызова в качестве параметра.
						</p>
						<p>Пример URL-адреса с запросом JSONP:</p>
						<Examples>
							https://external-domain.com/data?callback=myCallbackFunction
						</Examples>
					</li>
					<li>
						<b>PUT: </b>Используется для обновления данных на сервере. Клиент
						отправляет данные, указывая ресурс, который нужно обновить. Если
						ресурс не существует, он может быть создан. Пример: обновление
						информации о пользователе.
					</li>
					<li>
						<p>
							<b>
								Сервер обрабатывает запрос и возвращает данные с оберткой
								функции:{' '}
							</b>
							Сервер, получив запрос с параметром callback, обрабатывает его и
							возвращает данные в виде JSON с оберткой функции, предоставленной
							в параметре callback.
						</p>
						<p>Пример ответа сервера:</p>
						<Examples>
							myCallbackFunction(&#123; "key": "value", "key2": "value2"
							&#125;);
						</Examples>
					</li>
					<li>
						<p>
							<b>Обработка данных на веб-странице: </b>Когда браузер загружает
							скрипт (полученный как ответ от сервера), он вызывает функцию
							обратного вызова, которую создала веб-страница. Это позволяет
							получить доступ к данным, возвращенным сервером, и использовать их
							внутри веб-страницы.
						</p>
					</li>
				</ol>
			</p>
			<p>
				JSONP используется для обмена данными между разными доменами, но у него
				есть ограничения, такие как отсутствие поддержки обработки ошибок и
				безопасность. Поэтому в современной веб-разработке часто предпочитают
				использовать более безопасные и мощные методы, такие как CORS
				(Cross-Origin Resource Sharing) для устранения ограничений Same-Origin
				Policy.
			</p>
		</div>
	)
}

export default Question
