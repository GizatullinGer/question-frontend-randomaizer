import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				Long-Polling, WebSockets и Server-Sent Events (SSE) - это технологии,
				которые позволяют веб-приложениям обмениваться данными между клиентом и
				сервером в реальном времени, но каждая из них имеет свои особенности.
			</p>
			<p>
				<ol>
					<li>
						<b>Long-Polling (Долгий опрос): </b>
						<p>
							<ul>
								<li>При долгом опросе клиент отправляет запрос серверу.</li>
								<li>
									Сервер держит соединение открытым до тех пор, пока у него не
									будет данных для отправки обратно клиенту.
								</li>
								<li>
									Клиент получает ответ, обрабатывает данные и затем немедленно
									отправляет новый запрос на сервер для следующего обновления.
								</li>
								<li>
									Это создает иллюзию постоянного соединения и позволяет серверу
									отправлять данные клиенту в реальном времени без необходимости
									постоянного опроса.
								</li>
							</ul>
						</p>
					</li>
					<li>
						<b>URI (Uniform Resource Identifier): </b>Это идентификатор ресурса,
						к которому клиент хочет получить доступ. Он указывает путь к
						конкретному ресурсу на сервере.
					</li>
					<li>
						<b>WebSockets: </b>
						<p>
							<ul>
								<li>
									WebSockets обеспечивают полнодуплексное соединение между
									клиентом и сервером через один TCP сокет.
								</li>
								<li>
									После установления соединения через протокол HTTP, происходит
									апгрейд до протокола WebSocket.
								</li>
								<li>
									Позволяет клиенту и серверу обмениваться данными в режиме
									реального времени без ограничений на инициирование запросов.
								</li>
								<li>
									Эффективен для приложений, требующих постоянной связи, таких
									как онлайн-игры, чаты и потоковая передача данных.
								</li>
							</ul>
						</p>
					</li>
					<li>
						<b>Server-Sent Events (SSE):</b>
						<p>
							<ul>
								<li>
									SSE представляет собой однонаправленное соединение, при
									котором сервер отправляет непрерывный поток данных клиенту.
								</li>
								<li>Использует стандартные HTTP запросы и ответы.</li>
								<li>
									Подходит для сценариев, где сервер должен отправлять клиенту
									обновления или поток информации в одном направлении (от
									сервера к клиенту) без необходимости, чтобы клиент посылал
									запросы для получения данных.
								</li>
							</ul>
						</p>
					</li>
				</ol>
			</p>
			<p>
				Разница между этими технологиями заключается в способе, как они
				устанавливают и поддерживают соединение между клиентом и сервером, а
				также в их специфических возможностях. Выбор между ними зависит от
				конкретных требований вашего приложения, типа данных, которые необходимо
				передавать, а также от возможностей и поддержки, которые предоставляются
				вашими целевыми системами и браузерами.
			</p>
		</div>
	)
}

export default Question
