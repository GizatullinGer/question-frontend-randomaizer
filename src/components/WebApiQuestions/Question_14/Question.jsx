import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				IndexedDB - это встроенная в браузер база данных, позволяющая
				веб-приложениям хранить структурированные данные на стороне клиента. Она
				предоставляет способ хранения и получения больших объемов данных внутри
				браузера, что особенно полезно для offline-приложений, кэширования
				данных и улучшения производительности веб-приложений.
			</p>
			<p>Основные преимущества IndexedDB:</p>
			<p>
				<ol>
					<li>
						<b>Хранение структурированных данных: </b>Позволяет хранить сложные
						и структурированные данные, включая объекты JavaScript. Данные
						хранятся в базе данных, которая может быть организована в объекты,
						хранилища, индексы и транзакции.
					</li>
					<li>
						<b>Работа в оффлайн-режиме: </b>Поскольку данные хранятся на стороне
						клиента, веб-приложение может продолжать работать в оффлайн-режиме,
						обеспечивая доступ к ранее сохраненным данным без подключения к
						Интернету.
					</li>
					<li>
						<b>Высокая производительность: </b>Позволяет эффективно работать с
						большими объемами данных. Поиск, добавление, удаление и обновление
						данных происходят с высокой скоростью.
					</li>
					<li>
						<b>Асинхронность: </b>Операции с базой данных в IndexedDB
						выполняются асинхронно. Это позволяет избежать блокировки основного
						потока выполнения и улучшает отзывчивость веб-приложений.
					</li>
					<li>
						<b>Безопасность: </b>В IndexedDB работает в рамках политики
						безопасности Same-Origin Policy, что означает, что веб-приложение
						может получить доступ только к данным, которые принадлежат тому же
						домену.
					</li>
					<li>
						<b>Поддержка большинства современных браузеров: </b>IndexedDB
						поддерживается большинством современных браузеров, что делает его
						универсальным средством хранения данных для веб-приложений.
					</li>
				</ol>
			</p>
			<p>
				IndexedDB предоставляет веб-разработчикам мощный инструмент для хранения
				и управления данными внутри браузера, что позволяет создавать более
				мощные и более отзывчивые веб-приложения, способные работать как в
				онлайн, так и в оффлайн режимах.
			</p>
		</div>
	)
}

export default Question
