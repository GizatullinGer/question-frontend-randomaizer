import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				PUT- и POST-запросы - это два различных метода, используемых в протоколе
				HTTP для отправки данных на сервер. Вот основные различия между ними:
			</p>
			<p>
				<ol>
					<li>
						<b>Цель:</b>
						<ul>
							<li>
								PUT: Используется для обновления или создания ресурса на
								сервере. Если ресурс уже существует, то PUT-запрос обновит его с
								переданными данными. Если ресурс не существует, то он может быть
								создан.
							</li>
							<li>
								POST: Используется для отправки данных на сервер для обработки.
								POST-запросы могут создавать новые ресурсы, обновлять
								существующие или выполнять другие действия, связанные с
								обработкой данных.
							</li>
						</ul>
						<p>
							<b>Примечание: </b>термины вроде одинаковы, но отличия все же
							есть. Речь идет об обновлении данных. PUT - не умеет частично
							обновлять данные, новые данные перетрут старые. POST - умеет
							обновлять только часть данных, если это необходимо. Ну и нельзя
							забывать о ситуациях и требованиях действующего проекта
						</p>
					</li>
					<li>
						<b>Идемпотентность:</b>
						<ul>
							<li>
								PUT: PUT-запрос считается идемпотентным, что означает, что
								выполнение одного и того же PUT-запроса несколько раз не должно
								привести к изменению состояния ресурса после первого выполнения.
							</li>
							<li>
								POST: POST-запрос не является идемпотентным. Повторное
								выполнение POST-запроса может привести к созданию дублированных
								ресурсов или другим неожиданным эффектам.
							</li>
						</ul>
					</li>
					<li>
						<b>Данные:</b>
						<ul>
							<li>
								PUT: Данные в PUT-запросе отправляются для обновления или
								создания ресурса. Весь ресурс обычно заменяется новыми данными,
								поэтому клиент должен передать полные данные.
							</li>
							<li>
								POST: Данные в POST-запросе отправляются для обработки на
								сервере. POST-запрос может отправлять часть данных или полные
								данные в зависимости от сценария.
							</li>
						</ul>
					</li>
					<li>
						<b>Безопасность:</b>
						<ul>
							<li>
								PUT: PUT-запросы могут быть менее безопасными, так как они имеют
								потенциал изменить или создать ресурсы без явной проверки
								наличия доступа или прав.
							</li>
							<li>
								POST: POST-запросы могут более безопасно интегрироваться с
								механизмами аутентификации и авторизации, так как они позволяют
								серверу выполнять более точную обработку данных перед созданием
								или обновлением ресурсов.
							</li>
						</ul>
					</li>
					<li>
						<b>Применение:</b>
						<ul>
							<li>
								PUT: Часто используется для обновления данных, например,
								редактирования информации о пользователе или обновления
								содержимого страницы.
							</li>
							<li>
								POST: Часто используется для отправки данных форм, создания
								новых записей, отправки комментариев и других действий, где
								данные отправляются для обработки.
							</li>
						</ul>
					</li>
				</ol>
			</p>
		</div>
	)
}

export default Question
