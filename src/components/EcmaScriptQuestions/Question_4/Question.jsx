import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Временная мертвая зона (Temporal Dead Zone, сокращённо TDZ) - это
				концепция в JavaScript, которая относится к периоду между объявлением
				переменной с использованием ключевых слов <b>let</b> или <b>const</b> и
				фактической инициализацией этой переменной. Во время этой мертвой зоны
				переменная считается существующей, но она недоступна и не может быть
				использована, пока не будет произведена инициализация.
			</p>
			<p>Пример:</p>
			<p>
				<Examples>
					console.log(myVar); // Вызовет ReferenceError: myVar is not defined
					<br />
					<br />
					let myVar = 10;
				</Examples>
			</p>
			<p>
				В приведенном выше примере переменная <b>myVar</b> объявлена с
				использованием <b>let</b>, но попытка доступа к ней перед её
				инициализацией вызовет ошибку ReferenceError. Это происходит из-за
				временной мертвой зоны. Переменная <b>myVar</b> существует в этот
				момент, но её значение не определено.
			</p>
			<p>
				Это поведение было введено в стандарте ECMAScript 6 (ES6) для уменьшения
				ошибок и недоразумений в коде. В ES5 (и ранее версиях) объявления
				переменных с использованием <b>var</b> такой мертвой зоны не имеют, и
				переменные поднимались вверх (hoisted), что могло вызывать нежелательное
				поведение.
			</p>
			<p>
				Поэтому, хорошей практикой является всегда объявлять переменные в начале
				блока или функции перед их использованием, чтобы избежать проблем с
				временной мертвой зоной и улучшить читаемость кода.
			</p>
		</div>
	)
}

export default Question
