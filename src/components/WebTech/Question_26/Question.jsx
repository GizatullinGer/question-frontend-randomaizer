import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				Паттерн PRPL (Push, Render, Pre-cache, Lazy-load) является стратегией
				оптимизации производительности веб-приложений, особенно для Progressive
				Web Apps (PWA). Он помогает ускорить загрузку и улучшить
				пользовательский опыт. Вот разбор аббревиатуры PRPL:
			</p>
			<p>
				<ol>
					<li>
						<b>Push:</b>
						<p>
							Отправка (Push) - представляет собой подход, который помогает
							предварительно загружать критический контент, который необходим
							для первоначального рендеринга страницы. Это может включать
							основные стили, скрипты и другие критические ресурсы.
						</p>
					</li>
					<li>
						<b>Render:</b>
						<p>
							Рендеринг (Render) - означает отображение основного контента,
							который пользователю необходим для начала взаимодействия с
							веб-приложением. Это связано с отображением страницы с минимальным
							количеством задержек, чтобы обеспечить быстрый старт.
						</p>
					</li>
					<li>
						<b>Pre-cache:</b>
						<p>
							Предварительное кэширование (Pre-cache) - подразумевает
							кэширование содержимого, которое пользователь вряд ли увидит
							сразу, но которое может понадобиться при последующих запросах. Это
							позволяет загрузить ресурсы заранее, повышая отзывчивость
							приложения при последующих переходах.
						</p>
					</li>
					<li>
						<b>Lazy-load:</b>
						<p>
							Ленивая загрузка (Lazy-load) - предполагает загрузку ресурсов
							только по мере необходимости, когда они начинают становиться
							видимыми или когда пользователь начинает взаимодействие с ними.
							Это улучшает производительность путем загрузки только тех
							ресурсов, которые действительно нужны в данный момент.
						</p>
					</li>
				</ol>
			</p>
			<p>
				PRPL представляет собой комплексную стратегию, которая ставит акцент на
				предварительную загрузку критического и необходимого контента для
				оптимизации начальной загрузки страницы, а также управление ресурсами
				для улучшения общего пользовательского опыта. Он хорошо работает в
				контексте PWA, где важны скорость загрузки, отзывчивость и эффективное
				использование ресурсов.
			</p>
		</div>
	)
}

export default Question
