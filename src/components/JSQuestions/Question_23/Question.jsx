import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				В JavaScript существует различие между двумя основными типами объектов:
				"нативные объекты" и "хост-объекты".
			</p>
			<p>
				<ol>
					<li>
						<b>Нативные объекты:</b>
						<ul>
							<li>
								Это объекты, которые предоставляются самим языком JavaScript,
								такие как Object, Array, Function, String, Number, Boolean и
								другие.
							</li>
							<li>
								Нативные объекты в JavaScript встроены в сам язык и
								предоставляют базовую функциональность, которая может быть
								использована в любом окружении выполнения (браузер, Node.js и т.
								д.).
							</li>
							<li>
								Они имеют стандартные методы и свойства, определенные в
								спецификации ECMAScript.
							</li>
						</ul>
					</li>
					<li>
						<b>Хост-объекты:</b>
						<ul>
							<li>
								Это объекты, предоставляемые окружением выполнения JavaScript,
								таким как браузер или сервер Node.js.
							</li>
							<li>
								Хост-объекты зависят от окружения и могут предоставлять
								функциональность, специфичную для этого окружения (например,{' '}
								<b>window</b> в браузере, <b>document</b>, <b>XMLHttpRequest</b>{' '}
								и т. д.).
							</li>
							<li>
								Они могут иметь методы и свойства, специфичные для конкретного
								окружения, но не определены в стандарте ECMAScript.
							</li>
						</ul>
					</li>
				</ol>
			</p>
			<p>Разница между нативными объектами и хост-объектами включает в себя:</p>
			<p>
				<ul>
					<li>
						<b>Происхождение: </b>Нативные объекты предоставляются самим языком,
						в то время как хост-объекты предоставляются средой выполнения.
					</li>
					<li>
						<b>Специфичность: </b>Нативные объекты являются универсальными и
						имеют одинаковую функциональность в различных окружениях JavaScript.
						Хост-объекты специфичны для конкретного окружения и могут иметь
						различия в методах и свойствах.
					</li>
					<li>
						<b>Доступность: </b>Нативные объекты доступны везде, где доступен
						язык JavaScript. Хост-объекты доступны только в конкретном окружении
						(например, браузерные объекты доступны только в браузере).
					</li>
				</ul>
			</p>
			<p>
				Это разделение между нативными и хост-объектами важно понимать при
				работе с различными средами выполнения JavaScript, чтобы правильно
				использовать их функциональность и избегать ошибок, связанных с
				различиями в объектах, предоставляемых разными средами.
			</p>
		</div>
	)
}

export default Question
