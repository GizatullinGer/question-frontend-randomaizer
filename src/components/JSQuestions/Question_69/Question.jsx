import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				В JavaScript преобразование типов данных может происходить явно
				(explicit) или неявно (implicit), когда один тип данных преобразуется в
				другой.
			</p>
			<h3>Явное преобразование (Explicit Coercion):</h3>
			<p>
				<b>Явное преобразование типов</b> - это преобразование значения из
				одного типа в другой явно с использованием встроенных функций или
				методов, которые предоставляет язык.
			</p>
			<p>Примеры явного преобразования типов:</p>
			<p>
				<ol>
					<li>
						<b>Использование функций преобразования типов:</b>
						<Examples>
							let num = 10;
							<br />
							let str = String(num); // Явное преобразование числа в строку
						</Examples>
					</li>
					<li>
						<b>Методы преобразования типов:</b>
						<Examples>
							let str = '123';
							<br />
							let num = parseInt(str); // Явное преобразование строки в число
						</Examples>
					</li>
				</ol>
			</p>
			<h3>Неявное преобразование (Implicit Coercion):</h3>
			<p>
				<b>Неявное преобразование типов</b> - это автоматическое преобразование
				типов данных JavaScript в процессе выполнения операций.
			</p>
			<p>Примеры неявного преобразования типов:</p>
			<p>
				<ol>
					<li>
						<b>Арифметические операции:</b>
						<Examples>
							let num = 10; <br />
							let str = '5'; <br />
							let result = num + str; // Неявное преобразование числа в строку и
							конкатенация строк
						</Examples>
					</li>
					<li>
						<b>Сравнение значений разных типов:</b>
						<Examples>
							let num = 10; <br />
							let str = '10'; <br />
							let isEqual = num == str; // Неявное преобразование строки в число
							при сравнении
						</Examples>
					</li>
				</ol>
			</p>
			<p>
				Неявное преобразование может привести к неожиданным результатам в коде,
				поэтому важно понимать, как JavaScript выполняет преобразование типов
				данных автоматически.
			</p>
			<p>
				Оба типа преобразования (явное и неявное) играют важную роль в
				JavaScript и часто используются для работы с различными типами данных.
				Однако явное преобразование обычно предпочтительнее, так как оно делает
				код более читаемым и предсказуемым.
			</p>
		</div>
	)
}

export default Question
