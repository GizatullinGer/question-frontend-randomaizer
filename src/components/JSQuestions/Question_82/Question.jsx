import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Сообщение "Maximum call stack size exceeded" (превышен максимальный
				размер стека вызовов) в консоли означает, что в вашем JavaScript-коде
				произошло переполнение стека вызовов из-за избыточного количества
				рекурсивных вызовов функций или глубокой вложенности вызовов.
			</p>
			<p>
				Это происходит, когда функция вызывает саму себя (рекурсия) или когда
				вызывается слишком много вложенных функций без завершения старых
				вызовов. Каждый раз, когда функция вызывается, информация о вызове
				помещается на вершину стека вызовов. Когда вызов функции завершается,
				информация о нем удаляется из стека. Однако если вызовы функций
				накапливаются слишком глубоко, стек вызовов может переполниться, что и
				вызовет это сообщение об ошибке.
			</p>
			<p>Пример переполнения стека вызовов из-за рекурсивного вызова:</p>
			<Examples>
				function myRecursiveFunction() &#123;
				<br />
				myRecursiveFunction(); // Рекурсивный вызов функции
				<br />
				&#125;
				<br />
				<br />
				myRecursiveFunction(); // Вызов рекурсивной функции
			</Examples>
			<p>
				Чтобы избежать этой ошибки, убедитесь, что рекурсивные вызовы имеют
				условие завершения или ограничивают глубину рекурсии, чтобы
				предотвратить бесконечное увеличение стека вызовов.
			</p>
			<p>Пример с условием завершения рекурсии:</p>
			<Examples>
				let counter = 0;
				<br />
				<br />
				function myRecursiveFunction() &#123;
				<br />
				&emsp;&emsp;counter++;
				<br />
				&emsp;&emsp;if (counter {'>'} 10) &#123;
				<br />
				&emsp;&emsp;&emsp;&emsp;return;
				<br />
				&emsp;&emsp;&#125;
				<br />
				&emsp;&emsp;myRecursiveFunction(); // Рекурсивный вызов функции
				<br />
				&#125;
				<br />
				<br />
				myRecursiveFunction(); // Вызов рекурсивной функции
			</Examples>
			<p>
				Добавление условия, которое прерывает рекурсию после определенного
				количества вызовов, поможет предотвратить переполнение стека вызовов.
			</p>
		</div>
	)
}

export default Question
