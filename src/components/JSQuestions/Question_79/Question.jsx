import React from 'react'

const Question = () => {
	return (
		<div>
			<p>Вот несколько распространенных причин утечек памяти:</p>
			<h3>1. Незавершенные ссылки (Unintentional References):</h3>
			<p>
				<ul>
					<li>
						Когда объект создается, но на него больше нет ссылок, он все еще
						остается в памяти и не подлежит сборке мусора.
					</li>
					<li>
						Это может произойти, если ссылка на объект сохранена в области
						видимости, которая продолжает существовать дольше, чем нужно.
					</li>
				</ul>
			</p>
			<h3>
				2. Забытые таймеры или слушатели событий (Forgotten Timers or Event
				Listeners):
			</h3>
			<p>
				<ul>
					<li>
						Если созданы таймеры (setTimeout, setInterval) или слушатели событий
						(addEventListener), но они не были очищены или удалены после
						использования, это может привести к утечкам памяти.
					</li>
				</ul>
			</p>
			<h3>3. Циклические ссылки (Circular References):</h3>
			<p>
				<ul>
					<li>
						Когда два или более объекта имеют взаимные ссылки друг на друга, и
						эти ссылки образуют цикл, это может предотвратить сборщику мусора
						правильное удаление объектов.
					</li>
				</ul>
			</p>
			<h3>4. Неправильное использование памяти (Misuse of Memory):</h3>
			<p>
				<ul>
					<li>
						В некоторых случаях, неправильное использование памяти, например,
						некорректное выделение или освобождение памяти, может также привести
						к утечкам.
					</li>
				</ul>
			</p>
			<h3>5. Неполное закрытие ресурсов:</h3>
			<p>
				<ul>
					<li>
						Если ресурсы, такие как файлы, сетевые соединения или базы данных,
						не закрыты или освобождены после использования, это может привести к
						утечкам ресурсов.
					</li>
				</ul>
			</p>
			<p>
				Утечки памяти могут быть проблемой, особенно в долгосрочных приложениях
				или веб-приложениях, которые работают длительное время. Поиск и
				исправление утечек памяти требует внимательного мониторинга и анализа
				работы приложения для обнаружения мест, где происходит неправильное
				использование ресурсов или объектов, и корректировки этого поведения для
				правильного управления памятью.
			</p>
		</div>
	)
}

export default Question
