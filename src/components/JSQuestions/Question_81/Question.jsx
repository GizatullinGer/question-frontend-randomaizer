/* eslint-disable react/jsx-no-comment-textnodes */
import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Примитивы и объекты - это два основных типа данных в JavaScript, и у них
				есть несколько ключевых различий.
			</p>
			<h3>Примитивы (Primitive Values):</h3>
			<p>
				<ol>
					<li>
						<b>Неизменяемость (Immutability):</b>
						<p>
							Примитивы являются неизменяемыми. Значение примитива не может быть
							изменено напрямую. Например, если переменная содержит число, вы не
							можете изменить это число прямым присваиванием.
						</p>
					</li>
					<li>
						<b>Хранение по значению (Stored by Value):</b>
						<p>
							Примитивы хранятся по значению. Когда переменная присваивается
							примитивному значению, она хранит это значение напрямую.
						</p>
					</li>
					<li>
						<b>Типы примитивов:</b>
						<p>
							JavaScript имеет следующие примитивные типы:{' '}
							<b>
								number, string, boolean, null, undefined, symbol (добавлен в
								ES6)
							</b>
							.
						</p>
					</li>
				</ol>
			</p>
			<h3>Объекты (Objects):</h3>
			<p>
				<ol>
					<li>
						<b>Изменяемость (Mutability):</b>
						<p>
							Объекты изменяемы. Вы можете изменять состояние и содержимое
							объекта, добавлять новые свойства или изменять существующие.
						</p>
					</li>
					<li>
						<b>Хранение по ссылке (Stored by Reference):</b>
						<p>
							Объекты хранятся по ссылке. При присваивании объекта переменной,
							сам объект не копируется, а передается ссылка на него. Поэтому,
							если изменить объект через одну переменную, это отразится и на
							других переменных, которые ссылаются на этот объект.
						</p>
					</li>
					<li>
						<b>Тип object:</b>
						<p>
							В JavaScript объекты представлены типом <b>object</b>. Это
							включает в себя объекты <b>&#123;&#125;</b>, массивы <b>[]</b>,
							функции и другие специальные структуры данных.
						</p>
					</li>
				</ol>
			</p>
			<h3>Пример:</h3>
			<Examples>
				// Примитивы
				<br />
				let num = 10; // Число (примитив)
				<br />
				let text = "Hello"; // Строка (примитив)
				<br />
				<br />
				// Объекты
				<br />
				let obj = &#123; key: 'value' &#125;; // Объект
				<br />
				let arr = [1, 2, 3]; // Массив (объект)
			</Examples>
			<p>
				Когда вы работаете с переменными, содержащими примитивные значения,
				операции обычно выполняются над самими значениями. С объектами же
				операции, как правило, выполняются над ссылками на объект, что может
				приводить к изменениям, видимым через другие ссылки на этот же объект.
				Это ключевая разница между примитивами и объектами в JavaScript.
			</p>
		</div>
	)
}

export default Question
