import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				Расширение (модификация) нативных объектов JavaScript (таких как Array,
				Object, String и других) путём добавления своих собственных методов или
				переопределения существующих может привести к некоторым проблемам и
				нежелательным последствиям. Вот несколько причин, почему это считается
				плохой практикой:
			</p>
			<p>
				<ol>
					<li>
						<b>Конфликт имен (Именованные коллизии): </b>При добавлении своих
						методов в нативные объекты вы рискуете переопределить или
						конфликтовать с уже существующими методами или методами других
						библиотек, что может привести к непредсказуемому поведению
						приложения.
					</li>
					<li>
						<b>Портативность и совместимость: </b>Изменения, внесенные в
						нативные объекты, могут привести к тому, что ваш код будет работать
						неправильно или вообще не будет работать на других платформах или в
						других средах выполнения JavaScript, где такие изменения не
						реализованы или имеют другую реализацию.
					</li>
					<li>
						<b>Неожиданные эффекты: </b>Поскольку нативные объекты используются
						во множестве библиотек и фреймворков, изменение их поведения может
						привести к трудноуловимым ошибкам и неожиданным последствиям в
						других частях кода.
					</li>
					<li>
						<b>Обновления и поддержка: </b>При обновлении JavaScript или его
						окружения ваши изменения могут привести к проблемам совместимости.
						Кроме того, при обновлении языка или стандартов эти изменения могут
						перестать работать или работать некорректно.
					</li>
				</ol>
			</p>
			<p>
				Вместо расширения нативных объектов, хорошей практикой считается
				создание собственных методов и функций-помощников, которые будут
				использоваться в вашем коде. Можно расширить функциональность объектов,
				используя паттерн "Модуль" или создавая свои собственные классы, которые
				наследуются от нативных объектов или используют их как часть своей
				реализации. Это поможет избежать проблем, связанных с изменением
				встроенных объектов JavaScript и упростит поддержку и развитие вашего
				кода.
			</p>
		</div>
	)
}

export default Question
