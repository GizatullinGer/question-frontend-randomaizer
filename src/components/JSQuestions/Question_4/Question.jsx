/* eslint-disable react/jsx-no-comment-textnodes */
import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Разница между функциональным объявлением (function declaration) и
				функциональным выражением (function expression) заключается в том, как
				функции создаются и как они ведут себя в контексте поднятия (hoisting) и
				области видимости.
			</p>
			<ol>
				<li>
					<b>Function Declaration (Объявление функции):</b>
					<p>
						Функциональное объявление - это способ создания функции, при котором
						вы можете объявить функцию в любом месте внутри своей области
						видимости, и она будет доступна для вызова перед фактическим
						определением. Это происходит из-за поднятия, которое перемещает
						объявление функции в начало своей области видимости.
					</p>
					<Examples>
						foo(); // Можно вызвать здесь <br />
						function foo() &#123;
						<br />
						&emsp;&emsp;console.log("Привет, это функциональное объявление!");
						<br />
						&#125;
					</Examples>
				</li>
				<li>
					<b>Function Expression (Выражение функции):</b>
					<p>
						Функциональное выражение - это создание функции путем присвоения
						функционального выражения переменной. В этом случае функция доступна
						только после выполнения строки кода, в которой она определена.
						Функциональное выражение не поднимается в том же смысле, что и
						объявление функции.
					</p>
					<Examples>
						// foo(); // Ошибка, нельзя вызвать перед определением
						<br />
						const foo = function() &#123;
						<br />
						&emsp;&emsp;console.log("Привет, это функциональное выражение!");
						<br />
						&#125;;
						<br />
						foo(); // Теперь можно вызвать
					</Examples>
				</li>
			</ol>
			<p>
				Ключевая разница между этими двумя способами создания функций
				заключается в поднятии и времени доступности функции. Функциональные
				объявления поднимаются вверх и доступны до своего фактического
				определения, в то время как функциональные выражения нужно определить до
				их вызова.
			</p>
		</div>
	)
}

export default Question
