import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				TypeScript, будучи расширением JavaScript с добавленной поддержкой
				статической типизации, поддерживает основные элементы
				объектно-ориентированного программирования (ООП), что делает его мощным
				инструментом для разработки приложений с использованием ООП принципов.
			</p>
			<p>Вот основные элементы ООП, поддерживаемые в TypeScript:</p>
			<p>
				<ol>
					<li>
						<b>Классы (Classes):</b>
						<ul>
							<li>
								TypeScript поддерживает классы, что позволяет создавать шаблоны
								для создания объектов.
							</li>
							<li>
								В классах можно определять конструкторы, методы, свойства и
								наследование.
							</li>
						</ul>
					</li>
					<li>
						<b>Наследование (Inheritance):</b>
						<ul>
							<li>
								TypeScript позволяет использовать наследование между классами.
							</li>
							<li>
								Подклассы могут наследовать методы и свойства от родительских
								классов.
							</li>
						</ul>
					</li>
					<li>
						<b>Интерфейсы (Interfaces):</b>
						<ul>
							<li>
								Интерфейсы используются для определения контрактов, описывающих
								структуру классов.
							</li>
							<li>
								Они содержат только сигнатуры методов и свойств без их
								реализации.
							</li>
						</ul>
					</li>
					<li>
						<b>Абстрактные классы (Abstract Classes):</b>
						<ul>
							<li>
								TypeScript поддерживает абстрактные классы, которые могут
								содержать абстрактные методы без реализации.
							</li>
							<li>
								Подклассы должны предоставлять реализацию для всех абстрактных
								методов.
							</li>
						</ul>
					</li>
					<li>
						<b>Инкапсуляция (Encapsulation):</b>
						<ul>
							<li>
								TypeScript позволяет организовывать данные внутри классов,
								обеспечивая уровень доступа к данным и методам через
								модификаторы доступа (<b>public</b>, <b>private</b>,{' '}
								<b>protected</b>).
							</li>
						</ul>
					</li>
					<li>
						<b>Полиморфизм (Polymorphism):</b>
						<ul>
							<li>
								TypeScript поддерживает полиморфизм, что позволяет использовать
								одинаковые методы для разных классов, что имеют одинаковую
								сигнатуру.
							</li>
						</ul>
					</li>
				</ol>
			</p>
			<p>
				Эти основные элементы ООП в TypeScript позволяют создавать
				структурированный и модульный код, используя принципы ООП для
				организации, инкапсуляции, наследования и полиморфизма, что упрощает
				разработку и поддержку кода.
			</p>
		</div>
	)
}

export default Question
