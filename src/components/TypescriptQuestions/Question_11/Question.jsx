/* eslint-disable react/jsx-no-comment-textnodes */
import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Директивы с тремя наклонными чертами <b>(///)</b> - это специальные
				комментарии в TypeScript, используемые для управления компиляцией и
				указания дополнительной информации компилятору.
			</p>
			<p>
				В TypeScript существует несколько типов директив с тремя наклонными
				чертами, каждая из которых выполняет свою уникальную функцию:
			</p>
			<p>
				<ol>
					<li>
						<b>/// &lt;reference path="..." /&gt;:</b> Эта директива
						используется для указания пути к другим файлам TypeScript, которые
						необходимы для компиляции текущего файла. Она используется, когда
						нужно добавить зависимость от другого файла. Например:
						<Examples>/// &lt;reference path="myFile.ts" /&gt;</Examples>
					</li>
					<li>
						<b>/// &lt;reference types="..." /&gt;: </b> Эта директива
						используется для ссылки на определенные типы (например, определенные
						в DefinitelyTyped) и добавления их в текущий файл. Она сообщает
						компилятору, какие типы данных должны быть доступны в процессе
						компиляции. Например:
						<Examples>/// &lt;reference types="node" /&gt;</Examples>
					</li>
					<li>
						<b>/// &lt;reference lib="..." /&gt;: </b> Эта директива
						используется для выбора стандартных библиотек, которые должны быть
						доступны во время компиляции. Например:
						<Examples>/// &lt;reference lib="es2015.promise" /&gt;</Examples>
					</li>
					<li>
						<b>/// &lt;reference no-default-lib="true" /&gt;: </b> Эта директива
						используется для отключения автоматической загрузки стандартных
						библиотек TypeScript. Это указывает компилятору TypeScript не
						использовать встроенные библиотеки при компиляции. Например:
						<Examples>/// &lt;reference no-default-lib="true" /&gt;</Examples>
					</li>
				</ol>
			</p>
			<p>
				Директивы с тремя наклонными чертами предоставляют дополнительные
				указания компилятору TypeScript о том, как обрабатывать файлы при
				компиляции. Они позволяют управлять зависимостями, типами и доступными
				стандартными библиотеками во время компиляции кода.
			</p>
		</div>
	)
}

export default Question
