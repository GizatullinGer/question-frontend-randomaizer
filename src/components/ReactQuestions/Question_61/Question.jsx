import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				Синтетические события (SyntheticEvent) в React - это обёртка,
				создаваемая React, для стандартных браузерных событий. Они предоставляют
				кросс-браузерный интерфейс для работы с событиями, а также содержат
				дополнительные свойства и методы для удобной работы в React-приложениях.
			</p>
			<p>
				Вместо того чтобы прямо использовать события DOM (например,{' '}
				<b>onClick</b>, bronChange), React использует синтетические события,
				чтобы обеспечить некоторые дополнительные функциональные возможности и
				унифицированный API.
			</p>
			<p>Пример использования синтетического события в обработчике клика:</p>
			<Examples>
				import React from 'react';
				<br />
				<br />
				const MyComponent = () ={'>'} &#123;
				<br />
				&emsp;&emsp;handleClick = (event) ={'>'} &#123;
				<br />
				&emsp;&emsp;&emsp;&emsp;// event - это синтетическое событие, обёртка
				для браузерного события
				<br />
				&emsp;&emsp;&emsp;&emsp;console.log('Clicked!', event.target.value);
				<br />
				&emsp;&emsp;&#125;;
				<br />
				<br />
				&emsp;&emsp;return {'<'}button onClick=&#123;(e) ={'>'}{' '}
				handleClick(e)&#125;{'>'}
				Click me{'<'}/button{'>'};<br />
				&#125;
				<br />
				<br />
				export default MyComponent;
			</Examples>
			<p>Преимущества синтетических событий:</p>
			<ol>
				<li>
					<b>Кросс-браузерность: </b>Синтетические события обеспечивают
					кросс-браузерную совместимость и единообразие в работе с событиями в
					различных браузерах.
				</li>
				<li>
					<b>Дополнительные свойства и методы: </b>Синтетические события
					содержат дополнительные свойства и методы, которые необходимы для
					работы в React. Например, <b>event.preventDefault()</b> можно
					использовать для предотвращения стандартного поведения браузера.
				</li>
				<li>
					<b>Пул событий: </b>React использует пул событий для повышения
					производительности. После обработки события, оно возвращается в пул,
					чтобы избежать создания новых объектов событий при каждом вызове.
				</li>
			</ol>
			<p>
				Важно отметить, что синтетические события ведут себя аналогично
				стандартным событиям DOM, и большинство разработчиков React могут
				использовать их, не задумываясь о том, что они являются обёртками.
			</p>
		</div>
	)
}

export default Question
