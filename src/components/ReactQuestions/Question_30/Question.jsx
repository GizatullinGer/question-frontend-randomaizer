import React from 'react'
import { Examples } from '../../Examples/Examples'

const Question = () => {
	return (
		<div>
			<p>
				В контексте React, элементы и компоненты являются ключевыми
				строительными блоками для создания пользовательского интерфейса, но у
				них есть различия в своей структуре и использовании.
			</p>
			<h3>Элемент (Element):</h3>
			<ol>
				<li>
					<b>Определение: </b>Элемент - это объект, который описывает, что нужно
					отобразить на экране. Он представляет собой виртуальное представление
					UI. Элементы создаются с помощью функции <b>React.createElement()</b>{' '}
					или с использованием JSX.
				</li>
				<li>
					<b>Свойства: </b>Элементы содержат информацию о том, как должен
					выглядеть компонент, включая его тип (название), свойства (props) и
					дочерние элементы (children).
				</li>
				<li>
					<b>Неструктурированные данные: </b>Элементы не содержат логики или
					состояния. Они представляют простую структуру и не имеют внутреннего
					состояния.
				</li>
			</ol>
			<p>Пример элемента:</p>
			<Examples>
				const element = {'<'}h1{'>'}Hello, World!{'<'}/h1{'>'};
			</Examples>
			<h3>Компонент:</h3>
			<ol>
				<li>
					<b>Определение: </b>Компонент - это функция или класс, который
					возвращает React-элемент (или набор элементов) для отображения в
					пользовательском интерфейсе.
				</li>
				<li>
					<b>Реиспользуемость и логика: </b>Компоненты создаются для повторного
					использования и организации кода. Они могут содержать в себе логику,
					состояние и методы жизненного цикла.
				</li>
				<li>
					<b>Инкапсуляция: </b>Компоненты обеспечивают инкапсуляцию, позволяя
					разделять интерфейс на независимые и легко управляемые части.
				</li>
			</ol>
			<p>Пример функционального компонента:</p>
			<Examples>
				const Greeting = (props) ={'>'} &#123; <br />
				&emsp;&emsp;return {'<'}h1{'>'}Hello, &#123;props.name&#125;!{'<'}/h1
				{'>'};<br />
				&#125;;
			</Examples>
			<h3>Вывод:</h3>
			<p>
				Элементы используются для описания того, что нужно отобразить, в то
				время как компоненты представляют собой реализацию этого элемента.
				Компоненты создаются для упрощения кода, повторного использования и
				управления состоянием, в то время как элементы описывают визуальное
				представление интерфейса.
			</p>
		</div>
	)
}

export default Question
