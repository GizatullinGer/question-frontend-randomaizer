import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				GRASP (General Responsibility Assignment Software Patterns) - это набор
				принципов проектирования программного обеспечения, который помогает в
				назначении обязанностей объектам и классам в объектно-ориентированном
				программировании. GRASP предоставляет руководства для архитекторов и
				разработчиков по тому, как лучше распределить ответственности между
				объектами в программе для создания лучшей структуры кода.
			</p>
			<p>
				GRASP состоит из нескольких шаблонов, каждый из которых описывает
				типичную проблему в разработке ПО и предлагает общепринятое решение для
				этой проблемы, связанное с назначением ответственности объектам в
				программе. Некоторые из основных шаблонов GRASP включают:
			</p>
			<p>
				<ol>
					<li>
						<b>Expert (Эксперт): </b>Этот шаблон определяет, что задача должна
						быть поручена объекту, который имеет наибольшую экспертизу по
						выполнению этой задачи.
					</li>
					<li>
						<b>Creator (Создатель): </b>Этот шаблон помогает определить, какой
						объект должен быть ответственен за создание других объектов. Обычно
						объект, который имеет наиболее полную информацию, должен создавать
						другие объекты.
					</li>
					<li>
						<b>Controller (Контроллер): </b>Этот шаблон помогает определить
						объект, который управляет и координирует выполнение задачи или
						пользовательского запроса.
					</li>
					<li>
						<b>Low Coupling (Слабая связь): </b>Этот шаблон рекомендует создание
						слабых связей между объектами, чтобы уменьшить зависимости и
						повысить гибкость системы.
					</li>
					<li>
						<b>High Cohesion (Высокая связанность): </b>Этот шаблон помогает
						группировать методы и свойства внутри объектов таким образом, чтобы
						они были тесно связаны и имели общую цель.
					</li>
				</ol>
			</p>
			<p>
				GRASP предоставляет общие принципы, которые помогают разработчикам
				принимать решения о том, как лучше распределить ответственность и
				функции между объектами в программе для создания более чистой,
				эффективной и легко поддерживаемой структуры кода. Каждый из этих
				шаблонов обеспечивает основу для архитектуры программы, повышая
				понимание о том, как правильно организовать классы и объекты в
				приложении.
			</p>
		</div>
	)
}

export default Question
