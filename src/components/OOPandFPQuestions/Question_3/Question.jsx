import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				Классовое и прототипное наследование - это два основных подхода к
				организации наследования и созданию объектов в языках программирования.
				Они различаются по своей природе и используются в разных языках. Вот
				основные различия между ними:
			</p>
			<p>
				<ol>
					<li>
						<b>Классовое наследование (Classical Inheritance):</b>
						<p>
							<ul>
								<li>
									<b>Примеры языков: </b> Java, C++, C#, Python (с
									использованием классов).
								</li>
								<li>
									<b>Описание: </b> В классовом наследовании объекты создаются
									на основе классов, которые определяют структуру объектов и их
									поведение. Классы могут наследовать свойства и методы от
									других классов, образуя иерархии классов.
								</li>
								<li>
									<b>Синтаксис: </b>Обычно используются ключевые слова class,
									extends (или аналогичные) для создания классов и установки
									отношений наследования.
								</li>
							</ul>
						</p>
					</li>
					<li>
						<b>Прототипное наследование (Prototype Inheritance):</b>
						<p>
							<ul>
								<li>
									<b>Примеры языков: </b>JavaScript
								</li>
								<li>
									<b>Описание: </b>В прототипном наследовании объекты создаются
									на основе прототипов, которые являются объектами с общими
									свойствами и методами. Объекты могут наследовать свойства и
									методы от других объектов, становясь их прототипами.
								</li>
								<li>
									<b>Синтаксис: </b>Используется прототипное свойство prototype
									для определения прототипа объекта и метода Object.create() для
									создания объекта на основе прототипа.
								</li>
							</ul>
						</p>
					</li>
				</ol>
			</p>
			<p>
				Основное различие между классовым и прототипным наследованием
				заключается в том, как создаются и организуются объекты. В классовом
				наследовании объекты создаются на основе классов, а в прототипном
				наследовании - на основе прототипов. Классовое наследование является
				более строгим и структурированным подходом, который используется в
				статически типизированных языках, таких как Java и C++. Прототипное
				наследование более гибкое и используется в динамически типизированных
				языках, таких как JavaScript.
			</p>
		</div>
	)
}

export default Question
