import React from 'react'

const Question = () => {
	return (
		<div>
			<p>
				SOLID - это акроним, представляющий собой пять основных принципов
				объектно-ориентированного программирования (ООП), которые были
				представлены как руководство для создания чистого, поддерживаемого и
				расширяемого кода. Каждая буква в аббревиатуре SOLID соответствует
				одному из этих принципов:
			</p>
			<p>
				<ol>
					<li>
						<b>
							Принцип единственной ответственности (Single Responsibility
							Principle - SRP):{' '}
						</b>
						Этот принцип утверждает, что класс должен иметь только одну причину
						для изменения. Он должен быть ответственным только за одну важную
						задачу или функциональность. Это помогает создать более модульные и
						понятные классы.
					</li>
					<li>
						<b>Принцип открытости/закрытости (Open/Closed Principle - OCP): </b>
						Согласно этому принципу, программные сущности, такие как классы,
						модули и функции, должны быть открытыми для расширения, но закрытыми
						для модификации. Это означает, что вы должны уметь добавлять новую
						функциональность без изменения существующего кода.
					</li>
					<li>
						<b>
							Принцип подстановки Барбары Лисков (Liskov Substitution Principle
							- LSP):{' '}
						</b>
						Принцип Лисков гласит, что объекты подклассов должны быть способны
						заменить объекты своих суперклассов без изменения корректности
						программы. В простых словах, это означает, что подклассы не должны
						изменять предусловия и постусловия методов суперклассов.
					</li>
					<li>
						<b>
							Принцип разделения интерфейса (Interface Segregation Principle -
							ISP):{' '}
						</b>
						Согласно ISP, клиенты не должны зависеть от интерфейсов, которые они
						не используют. Принцип подразумевает, что интерфейсы должны быть
						маленькими и специфичными для потребностей клиентов, чтобы избежать
						ненужных зависимостей.
					</li>
					<li>
						<b>
							Принцип инверсии зависимостей (Dependency Inversion Principle -
							DIP):{' '}
						</b>
						Принцип инверсии зависимостей предполагает, что вы должны зависеть
						от абстракций, а не от конкретных реализаций. Это подразумевает, что
						код должен быть написан так, чтобы изменения в нижележащих
						компонентах не требовали изменений в вышележащих компонентах.
					</li>
				</ol>
			</p>
			<p>
				Соблюдение принципов SOLID способствует созданию более гибких,
				расширяемых и понятных программных систем, а также облегчает
				тестирование и обслуживание кода. Эти принципы являются важными для
				разработки качественных и устойчивых к изменениям приложений.
			</p>
		</div>
	)
}

export default Question
